<?php
 namespace App\Http\Controllers; use App\Models\categories; use App\Models\products; use App\Models\quotation; use App\Models\quotationDetails; use Barryvdh\DomPDF\Facade\Pdf; use Exception; use Illuminate\Http\Request; use Illuminate\Support\Facades\DB; class QuotationController extends Controller { public function index() { $quotations = quotation::orderBy("\x69\144", "\144\x65\x73\x63")->get(); return view("\x71\165\157\164\141\x74\151\157\156\56\151\156\144\145\x78", compact("\161\x75\157\164\141\x74\x69\x6f\x6e\163")); } public function create() { $products = products::orderby("\x6e\141\x6d\145", "\141\x73\143")->get(); $cats = categories::orderBy("\x6e\141\155\145", "\141\163\x63")->get(); return view("\x71\x75\x6f\x74\141\x74\x69\157\x6e\56\x63\x72\x65\141\164\145", compact("\160\162\157\x64\x75\x63\164\163", "\x63\141\164\163")); } public function store(Request $request) { try { if ($request->isNotFilled("\x69\x64")) { throw new Exception("\120\x6c\x65\x61\163\145\x20\123\x65\154\x65\x63\x74\40\101\164\154\x65\x61\163\164\40\117\x6e\145\x20\x50\x72\157\x64\165\143\164"); } DB::beginTransaction(); $quot = quotation::create(array("\143\x75\x73\x74\x6f\x6d\x65\162\x4e\x61\155\x65" => $request->customer, "\143\165\x73\x74\157\x6d\145\x72\x41\144\x64\x72\145\163\163" => $request->address, "\x6e\157\164\x65\163" => $request->notes, "\144\151\x73\143\157\x75\156\164" => $request->discount, "\144\143" => $request->dc, "\144\141\164\145" => $request->date, "\166\141\x6c\x69\144\x54\151\154\154" => $request->valid)); $ids = $request->id; $total = 0; foreach ($ids as $key => $id) { if ($request->amount[$key] > 0) { $qty = $request->qty[$key]; $price = $request->price[$key]; $total += $request->amount[$key]; quotationDetails::create(array("\x71\165\157\164\111\x44" => $quot->id, "\x70\162\x6f\x64\x75\x63\164\x49\104" => $id, "\160\x72\151\x63\145" => $price, "\161\164\x79" => $qty, "\x61\155\x6f\165\156\164" => $request->amount[$key])); } } $discount = $request->discount; $dc = $request->dc; $net = $total + $dc - $discount; $quot->update(array("\x74\157\x74\x61\154" => $net)); DB::commit(); return to_route("\161\165\x6f\164\141\164\x69\157\156\56\x73\x68\x6f\167", $quot->id)->with("\x73\x75\x63\143\x65\x73\163", "\121\x75\157\164\x61\x74\151\157\156\x20\103\x72\145\x61\x74\145\x64"); } catch (\Exception $e) { DB::rollback(); return back()->with("\145\162\x72\x6f\x72", $e->getMessage()); } } public function show($id) { $quot = quotation::find($id); return view("\x71\x75\x6f\x74\x61\164\151\x6f\156\56\166\151\145\x77", compact("\161\165\x6f\164")); } public function pdf($id) { $quot = quotation::find($id); $pdf = Pdf::loadview("\x71\165\x6f\x74\141\164\151\x6f\156\x2e\160\144\x66", compact("\161\165\157\x74")); return $pdf->download("\121\x75\x6f\x74\x61\164\x69\x6f\156\x20\x4e\157\x2e\x20{$quot->id}\x2e\x70\144\146"); } public function edit(quotation $quotation) { } public function update(Request $request, quotation $quotation) { } public function destroy($id) { try { DB::beginTransaction(); $quot = quotation::find($id); foreach ($quot->details as $product) { $product->delete(); } $quot->delete(); DB::commit(); session()->forget("\x63\x6f\156\x66\x69\162\x6d\145\x64\x5f\x70\x61\x73\x73\167\157\x72\x64"); return to_route("\x71\x75\157\x74\x61\164\151\x6f\x6e\x2e\x69\x6e\144\x65\x78")->with("\x73\x75\x63\143\x65\163\x73", "\121\x75\x6f\164\141\164\x69\157\x6e\x20\104\x65\154\x65\x74\145\144"); } catch (\Exception $e) { DB::rollBack(); session()->forget("\x63\x6f\x6e\x66\x69\162\155\x65\144\137\x70\x61\163\163\x77\157\x72\144"); return to_route("\161\165\x6f\x74\141\x74\151\x6f\x6e\x2e\x69\x6e\144\145\170")->with("\145\x72\162\x6f\x72", $e->getMessage()); } } }
