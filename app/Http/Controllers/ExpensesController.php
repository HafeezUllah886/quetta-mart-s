<?php
 namespace App\Http\Controllers; use App\Models\accounts; use App\Models\expenseCategories; use App\Models\expenses; use App\Models\transactions; use Illuminate\Http\Request; use Illuminate\Support\Facades\DB; class ExpensesController extends Controller { public function index() { $expenses = expenses::orderby("\151\144", "\144\145\163\143")->get(); $accounts = accounts::business()->get(); $categories = expenseCategories::all(); return view("\x46\x69\156\141\156\x63\145\x2e\145\x78\x70\145\156\163\x65\x2e\151\x6e\x64\x65\x78", compact("\x65\x78\x70\145\x6e\163\145\163", "\141\x63\143\157\165\156\x74\163", "\x63\x61\x74\x65\x67\x6f\x72\x69\x65\x73")); } public function create() { } public function store(Request $request) { try { DB::beginTransaction(); $ref = getRef(); expenses::create(array("\141\143\143\x6f\x75\x6e\x74\x49\104" => $request->accountID, "\143\141\164\111\x44" => $request->catID, "\x61\155\157\165\x6e\x74" => $request->amount, "\144\141\x74\x65" => $request->date, "\x6e\x6f\164\145\x73" => $request->notes, "\x72\145\x66\x49\104" => $ref)); createTransaction($request->accountID, $request->date, 0, $request->amount, "\105\x78\x70\x65\x6e\163\145\40\55\x20" . $request->notes, $ref); DB::commit(); return back()->with("\x73\x75\x63\143\x65\x73\x73", "\x45\x78\160\145\x6e\x73\145\40\123\x61\x76\145\x64"); } catch (\Exception $e) { DB::rollBack(); return back()->with("\145\162\x72\157\x72", $e->getMessage()); } } public function show(expenses $expenses) { } public function edit(expenses $expenses) { } public function update(Request $request, expenses $expenses) { } public function delete($ref) { try { DB::beginTransaction(); expenses::where("\162\145\x66\111\104", $ref)->delete(); transactions::where("\x72\x65\x66\111\104", $ref)->delete(); DB::commit(); session()->forget("\x63\157\156\146\x69\162\x6d\145\144\x5f\x70\141\163\x73\167\157\x72\144"); return redirect()->route("\x65\x78\160\145\156\x73\145\163\56\151\156\144\145\170")->with("\x73\x75\143\x63\145\x73\163", "\x45\170\160\x65\x6e\x73\x65\40\104\145\154\x65\x74\145\144"); } catch (\Exception $e) { DB::rollBack(); session()->forget("\x63\x6f\156\146\151\162\x6d\x65\144\x5f\x70\x61\x73\x73\167\157\x72\144"); return redirect()->route("\145\x78\160\145\x6e\x73\145\163\x2e\x69\x6e\144\145\170")->with("\145\x72\x72\157\x72", $e->getMessage()); } } }
