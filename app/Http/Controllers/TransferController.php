<?php
 namespace App\Http\Controllers; use App\Models\accounts; use App\Models\transactions; use App\Models\transfer; use Illuminate\Http\Request; use Illuminate\Support\Facades\DB; class TransferController extends Controller { public function index() { $transfers = transfer::orderby("\x69\x64", "\144\x65\163\143")->get(); $accounts = accounts::whereNotIn("\151\144", array(2, 3))->get(); return view("\106\x69\x6e\x61\x6e\x63\x65\56\164\x72\141\156\163\x66\x65\162\56\x69\156\144\145\x78", compact("\x74\162\x61\x6e\163\146\x65\x72\163", "\x61\143\x63\157\165\156\x74\x73")); } public function create() { } public function store(Request $request) { $request->validate(array("\164\157" => "\x64\151\146\x66\145\x72\x65\156\x74\72\x66\162\x6f\155"), array("\x74\x6f\x2e\144\151\146\146\145\162\x65\156\164" => "\x46\x72\157\x6d\40\x61\x6e\144\40\x54\157\x20\101\143\x63\157\x75\x6e\164\x73\x20\115\x75\163\164\40\x62\145\x20\x64\x69\x66\x66\145\162\145\x6e\x74")); try { DB::beginTransaction(); $ref = getRef(); $transfer = transfer::create(array("\146\x72\x6f\x6d" => $request->from, "\164\x6f" => $request->to, "\144\141\164\145" => $request->date, "\141\x6d\x6f\x75\x6e\x74" => $request->amount, "\x6e\x6f\164\x65\163" => $request->notes, "\x72\145\146\x49\104" => $ref)); $fromAccount = $transfer->fromAccount->title; $toAccount = $transfer->toAccount->title; createTransaction($request->from, $request->date, 0, $request->amount, "\124\x72\x61\156\x73\146\x65\162\x65\x64\x20\x74\x6f\x20{$toAccount}\x20\x3c\x62\x72\x3e\40{$request->notes}", $ref); createTransaction($request->to, $request->date, $request->amount, 0, "\124\x72\141\156\x73\146\145\x72\x65\x64\x20\x66\162\x6f\x6d\x20{$fromAccount}\40\x3c\x62\x72\76\40{$request->notes}", $ref); DB::commit(); return back()->with("\x73\x75\x63\143\x65\x73\163", "\x54\162\141\x6e\163\x66\x65\x72\145\144\40\x53\x75\x63\x63\x65\163\163\x66\165\154\154\171"); } catch (\Exception $e) { DB::rollBack(); return back()->with("\145\x72\x72\157\x72", $e->getMessage()); } } public function show(transfer $transfer) { } public function edit(transfer $transfer) { } public function update(Request $request, transfer $transfer) { } public function delete($ref) { try { DB::beginTransaction(); transfer::where("\x72\145\x66\x49\104", $ref)->delete(); transactions::where("\162\x65\146\x49\104", $ref)->delete(); DB::commit(); session()->forget("\143\157\x6e\x66\151\162\x6d\x65\x64\137\x70\141\x73\x73\x77\x6f\162\144"); return redirect()->route("\164\x72\x61\156\x73\x66\x65\162\163\x2e\151\156\144\145\170")->with("\163\165\x63\143\145\163\163", "\x54\162\141\156\163\x66\145\x72\40\104\x65\154\x65\x74\x65\x64"); } catch (\Exception $e) { DB::rollBack(); session()->forget("\x63\157\156\x66\151\162\155\x65\x64\x5f\160\x61\163\x73\x77\157\x72\x64"); return redirect()->route("\164\x72\x61\x6e\x73\146\x65\162\163\56\151\x6e\144\145\x78")->with("\145\162\162\x6f\x72", $e->getMessage()); } } }
